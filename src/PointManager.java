import java.util.ArrayList;
import java.util.List;

public class PointManager {
	Player[] players;
	int honba=0;
	int kyotaku=0;

	PointManager(Player[] players){
		this.players=players;
	}

	void ron(Player houra, Player houju, int fu, int han){
		houra.point += houraScore(houra, houju, false, fu, han);
		houju.point -= houraScore(houra, houju, false, fu, han);
	}

	void print(){
		for(int i=0;i<4;i++){
			System.out.print(players[i].name+":"+players[i].point+" ");
		}
		System.out.println();
	}

	void bappu(){
		List<Player> tempai = new ArrayList<>();
		List<Player> noten = new ArrayList<>();
		for(int i=0;i<4;i++){
			if(MillionMahjong.shanten(players[i])==0){
				tempai.add(players[i]);
			}else{
				noten.add(players[i]);
			}
		}
		switch(tempai.size()){
		case 1:
			tempai.get(0).point+=3000;
			noten.get(0).point -=1000;
			noten.get(1).point -=1000;
			noten.get(2).point -=1000;
			break;
		case 2:
			tempai.get(0).point+=1500;
			tempai.get(1).point+=1500;
			noten.get(0).point -=1500;
			noten.get(1).point -=1500;
			break;
		case 3:
			tempai.get(0).point+=1000;
			tempai.get(1).point+=1000;
			tempai.get(2).point+=1000;
			noten.get(0).point -=3000;
			break;
		}
	}

	void tumo(Player houra, int fu, int han){
		for(int i=0;i<4;i++){
			if(players[i]==houra) continue;
			houra.point += houraScore(houra, players[i], true, fu, han);
			players[i].point -= houraScore(houra, players[i], true, fu, han);

		}
	}

	int houraScore(Player agari, Player tg, boolean isTumo, int fu, int han){
		if(isTumo){
			if(agari.isOya()||tg.isOya()){
				return tumoOya[fu_id(fu)][han-1];
			}else{
				return tumoKo[fu_id(fu)][han-1];
			}
		}else{
			if(agari.isOya()){
				return ronOya[fu_id(fu)][han-1];
			}else{
				return ronKo[fu_id(fu)][han-1];
			}
		}
	}

	static int fu_id(int fu){
		switch(fu){
		case 20:return 0;
		case 25:return 1;
		default:return fu/10-1;
		}
	}

	static void printScore(int fu,int han,boolean isOya,boolean isTumo){
		if(isTumo){
			if(isOya){
				System.out.println(tumoOya[fu_id(fu)][han-1]+"オール");
			}else{
				System.out.println(tumoKo[fu_id(fu)][han-1]+"-"+tumoOya[fu_id(fu)][han-1]);
			}
		}else{
			if(isOya){
				System.out.println(ronOya[fu_id(fu)][han-1]);
			}else{
				System.out.println(ronKo[fu_id(fu)][han-1]);
			}
		}
	}

	final static int[][] ronKo ={
			{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
			{-1,1600,3200,6400,8000,12000,12000,16000,16000,16000,24000,24000,36000},
			{1000,2000,3900,7700,8000,12000,12000,16000,16000,16000,24000,24000,36000},
			{1300,2600,5200,8000,8000,12000,12000,16000,16000,16000,24000,24000,36000},
			{1600,3200,6400,8000,8000,12000,12000,16000,16000,16000,24000,24000,36000},
			{2000,3900,7700,8000,8000,12000,12000,16000,16000,16000,24000,24000,36000},
			{2300,4500,8000,8000,8000,12000,12000,16000,16000,16000,24000,24000,36000},
			{2600,5200,8000,8000,8000,12000,12000,16000,16000,16000,24000,24000,36000},
			{2900,5800,8000,8000,8000,12000,12000,16000,16000,16000,24000,24000,36000},
			{3200,6400,8000,8000,8000,12000,12000,16000,16000,16000,24000,24000,36000},
			{3600,7100,8000,8000,8000,12000,12000,16000,16000,16000,24000,24000,36000}};

	final static int[][] ronOya ={
			{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
			{-1,2400,4800,9600,12000,18000,18000,24000,24000,24000,36000,36000,48000},
			{1500,2900,5800,11600,12000,18000,18000,24000,24000,24000,36000,36000,48000},
			{2000,3900,7700,12000,12000,18000,18000,24000,24000,24000,36000,36000,48000},
			{2400,4800,9600,12000,12000,18000,18000,24000,24000,24000,36000,36000,48000},
			{2900,5800,11600,12000,12000,18000,18000,24000,24000,24000,36000,36000,48000},
			{3400,6800,12000,12000,12000,18000,18000,24000,24000,24000,36000,36000,48000},
			{3900,7700,12000,12000,12000,18000,18000,24000,24000,24000,36000,36000,48000},
			{4400,8700,12000,12000,12000,18000,18000,24000,24000,24000,36000,36000,48000},
			{4800,9600,12000,12000,12000,18000,18000,24000,24000,24000,36000,36000,48000},
			{5300,10600,12000,12000,12000,18000,18000,24000,24000,24000,36000,36000,48000}};

	final static int[][] tumoKo ={
			{-1  ,400 ,700 ,1300,2000,3000,3000,4000,4000,4000,6000,6000,8000},
			{-1  ,-1  ,800 ,1600,2000,3000,3000,4000,4000,4000,6000,6000,8000},
			{300 ,500 ,1000,2000,2000,3000,3000,4000,4000,4000,6000,6000,8000},
			{400 ,700 ,1300,2000,2000,3000,3000,4000,4000,4000,6000,6000,8000},
			{400 ,800 ,1600,2000,2000,3000,3000,4000,4000,4000,6000,6000,8000},
			{500 ,1000,2000,2000,2000,3000,3000,4000,4000,4000,6000,6000,8000},
			{600 ,1200,2000,2000,2000,3000,3000,4000,4000,4000,6000,6000,8000},
			{700 ,1300,2000,2000,2000,3000,3000,4000,4000,4000,6000,6000,8000},
			{800 ,1500,2000,2000,2000,3000,3000,4000,4000,4000,6000,6000,8000},
			{800 ,1600,2000,2000,2000,3000,3000,4000,4000,4000,6000,6000,8000},
			{900 ,1800,2000,2000,2000,3000,3000,4000,4000,4000,6000,6000,8000}};

	final static int[][] tumoOya ={
			{-1  ,700 ,1300,2600,4000,6000,6000,8000,8000,8000,12000,12000,16000},
			{-1  ,-1  ,1600,3200,4000,6000,6000,8000,8000,8000,12000,12000,16000},
			{500 ,1000,2000,3900,4000,6000,6000,8000,8000,8000,12000,12000,16000},
			{700 ,1300,2600,4000,4000,6000,6000,8000,8000,8000,12000,12000,16000},
			{800 ,1600,3200,4000,4000,6000,6000,8000,8000,8000,12000,12000,16000},
			{1000,2000,3900,4000,4000,6000,6000,8000,8000,8000,12000,12000,16000},
			{1200,2300,4000,4000,4000,6000,6000,8000,8000,8000,12000,12000,16000},
			{1300,2600,4000,4000,4000,6000,6000,8000,8000,8000,12000,12000,16000},
			{1500,2900,4000,4000,4000,6000,6000,8000,8000,8000,12000,12000,16000},
			{1600,3200,4000,4000,4000,6000,6000,8000,8000,8000,12000,12000,16000},
			{1800,3600,4000,4000,4000,6000,6000,8000,8000,8000,12000,12000,16000}};
}
